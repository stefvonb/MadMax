name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore program environment cache
        uses: actions/cache@v2
        id: cache-env
        with:
          path: ./.env/
          key: ${{ runner.os }}-env-${{ hashFiles('**/install_dependencies*.sh') }}
          restore-keys: |
            ${{ runner.os }}-env-
      - name: Install program dependencies
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: sh install_dependencies.sh
      - name: Restore Python virtual environment cache
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Install Python dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv ./.venv 
          source ./.venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          source ./.venv/bin/activate
          export PATH=$PWD/.env/bin:$PATH
          export LD_LIBRARY_PATH=$PWD/.env/lib:$LD_LIBRARY_PATH
          export DYLD_LIBRARY_PATH=$PWD/.env/lib:$DYLD_LIBRARY_PATH
          export PYTHONPATH=$PWD/.env/lib/python3.7/site-packages:$PYTHONPATH
          python test.py
